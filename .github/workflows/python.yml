name: python

on: [push, pull_request]

env:
  POETRY_VERSION: "1.8.2"
  PYTHON_VERSION: "3.12"

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry==${POETRY_VERSION}
      - name: Install poetry-plugin-export
        run: pipx inject poetry poetry-plugin-export
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry
      - name: Install Nox
        run: poetry install --only nox
      - name: Test with Nox
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_ORG_ID: ${{ secrets.OPENAI_ORG_ID }}
          SKIP_TESTS_NAAI: "tests/llm/ollama tests/llm/chat_completion.py"
        run: poetry run nox -s test-${{ matrix.python-version }}
  quality:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        job:
          - { nox-session: lint, poetry-groups: "lint" }
          # type_check needs main and test dependencies for inline type annotations.
          - { nox-session: type_check, poetry-groups: "type_check,main,test" }
          - { nox-session: docs, poetry-groups: "docs" }
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry==${POETRY_VERSION}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry
      - name: Install Nox and group dependencies
        run: poetry install --all-extras
      - name: Test with Nox
        run: poetry run nox -s ${{ matrix.job.nox-session }}
  poetry-check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry==${POETRY_VERSION}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Validate Poetry Configuration
        run: poetry check --lock